<UserControl x:Class="XFiler.Base.GridFilesPresenter"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:dragablz="http://dragablz.net/winfx/xaml/dragablz"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:base="clr-namespace:XFiler.Base"
             xmlns:sdk="clr-namespace:XFiler.SDK;assembly=XFiler.SDK"
             xmlns:dd="urn:gong-wpf-dragdrop"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800"
             
             DataContext="{Binding FilesPresenter}">

    <UserControl.Resources>
        <CollectionViewSource x:Key="GroupedCollectionViewSource"
                              Source="{Binding DirectoriesAndFiles}">
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="Group" />
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>

        <sdk:CommandReference x:Key="OpenCommand"
                              Command="{Binding DataContext.OpenCommand, 
                                                RelativeSource={RelativeSource AncestorType={x:Type base:GridFilesPresenter}}}" />

        <sdk:CommandReference x:Key="OpenNewTabCommand"
                              Command="{Binding DataContext.OpenNewTabCommand, 
                                                RelativeSource={RelativeSource AncestorType={x:Type base:GridFilesPresenter}}}"
                              CommandParameter="{Binding DataContext,
                                                        RelativeSource={RelativeSource AncestorType={x:Type dragablz:TabablzControl}}}" />

        <sdk:CommandReference x:Key="OpenNewWindowCommand"
                              Command="{Binding DataContext.OpenNewWindowCommand, 
                                                RelativeSource={RelativeSource AncestorType={x:Type base:GridFilesPresenter}}}" />
    </UserControl.Resources>

    <sdk:RectSelectDataGrid ItemsSource="{Binding Source={StaticResource GroupedCollectionViewSource}}"

                            AutoGenerateColumns="False"

                            HeadersVisibility="Column"
                            CanUserAddRows="False"
                            CanUserDeleteRows="False"
                            CanUserSortColumns="True"
                            CanUserResizeColumns="True"
                            CanUserResizeRows="False"
                            SelectionMode="Extended"
                            SelectionUnit="FullRow"

                            dd:DragDrop.DropScrollingMode="VerticalOnly"
                            dd:DragDrop.IsDragSource="True"
                            dd:DragDrop.IsDropTarget="True"
                            dd:DragDrop.UseDefaultEffectDataTemplate="True"
                            dd:DragDrop.DragDirectlySelectedOnly="True"
                            dd:DragDrop.UseDefaultDragAdorner="True"

                            dd:DragDrop.DropHandler="{Binding DropTarget}"
                            dd:DragDrop.DragHandler="{Binding DragSource}"

                            VirtualizingPanel.IsVirtualizing="True"
                            VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                            VirtualizingPanel.VirtualizationMode="Recycling"
                            EnableColumnVirtualization="True"
                            EnableRowVirtualization="True">
     
        <DataGrid.RowStyle>
            <Style TargetType="{x:Type DataGridRow}">
                <Setter Property="Margin" Value="0" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
                <Setter Property="ValidationErrorTemplate"
                        Value="{StaticResource MahApps.Templates.DataGridRow.ValidationError}" />
                <Setter Property="mah:DataGridHelper.CellPadding"
                        Value="{Binding Path=(mah:DataGridHelper.CellPadding), FallbackValue=0, TargetNullValue=0, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                <Setter Property="mah:DataGridHelper.SelectionUnit"
                        Value="{Binding Path=SelectionUnit, FallbackValue={x:Static DataGridSelectionUnit.FullRow}, TargetNullValue={x:Static DataGridSelectionUnit.FullRow}, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />

                <Setter Property="ContextMenu">
                    <Setter.Value>
                        <ContextMenu>
                            <MenuItem Header="Открыть"
                                      Command="{StaticResource OpenCommand}"
                                      CommandParameter="{Binding}" />
                            <MenuItem Header="Открыть в новой вкладке"
                                      Command="{StaticResource  OpenNewTabCommand}"
                                      CommandParameter="{Binding}" />
                            <MenuItem Header="Открыть в новом окне"
                                      Command="{StaticResource  OpenNewWindowCommand}"
                                      CommandParameter="{Binding}" />
                        </ContextMenu>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridRow}">
                            <Border x:Name="DGR_Border"
                                    HorizontalAlignment="Left"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <Border.InputBindings>
                                    <MouseBinding MouseAction="MiddleClick"
                                                  Command="{StaticResource OpenNewTabCommand}"
                                                  CommandParameter="{Binding}" />
                                    <MouseBinding MouseAction="LeftDoubleClick"
                                                  Command="{StaticResource  OpenCommand}"
                                                  CommandParameter="{Binding }" />
                                </Border.InputBindings>
                                <SelectiveScrollingGrid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>

                                    <DataGridCellsPresenter Grid.Column="1"
                                                            ItemsPanel="{TemplateBinding ItemsPanel}"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                                    <DataGridDetailsPresenter Grid.Row="1"
                                                              Grid.Column="1"
                                                              SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=AreRowDetailsFrozen, FallbackValue={x:Static SelectiveScrollingOrientation.Both}, TargetNullValue={x:Static SelectiveScrollingOrientation.Both}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}}"
                                                              Visibility="{TemplateBinding DetailsVisibility}" />

                                    <DataGridRowHeader Grid.Row="0"
                                                       Grid.RowSpan="2"
                                                       Grid.Column="0"
                                                       SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                                       Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=HeadersVisibility, FallbackValue={x:Static Visibility.Visible}, TargetNullValue={x:Static Visibility.Visible}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Row}}" />
                                </SelectiveScrollingGrid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsNewItem" Value="True">
                        <Setter Property="Margin"
                                Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=NewItemMargin}" />
                    </Trigger>

                    <!--  IsSelected  -->
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="mah:DataGridHelper.SelectionUnit" Value="FullRow" />
                            <Condition Property="IsSelected" Value="True" />
                        </MultiTrigger.Conditions>
                        <Setter Property="Background"
                                Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Background}" />
                        <Setter Property="BorderBrush"
                                Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.BorderBrush}" />
                        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Text}" />
                    </MultiTrigger>

                    <!--  IsSelected and Selector.IsSelectionActive  -->
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="mah:DataGridHelper.SelectionUnit" Value="FullRow" />
                            <Condition Property="IsSelected" Value="True" />
                            <Condition Property="Selector.IsSelectionActive" Value="False" />
                        </MultiTrigger.Conditions>
                        <Setter Property="Background"
                                Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Background.Inactive}" />
                        <Setter Property="BorderBrush"
                                Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.BorderBrush.Inactive}" />
                        <Setter Property="Foreground"
                                Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Text.Inactive}" />
                    </MultiTrigger>

                    <!--  IsMouseOver  -->
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="mah:DataGridHelper.SelectionUnit" Value="FullRow" />
                            <Condition Property="IsMouseOver" Value="True" />
                        </MultiTrigger.Conditions>
                        <Setter Property="Background"
                                Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Background.MouseOver}" />
                        <Setter Property="BorderBrush"
                                Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.BorderBrush.MouseOver}" />
                        <Setter Property="Foreground"
                                Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Text.MouseOver}" />
                    </MultiTrigger>

                    <!--  IsEnabled  -->
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="mah:DataGridHelper.SelectionUnit" Value="FullRow" />
                            <Condition Property="IsEnabled" Value="False" />
                        </MultiTrigger.Conditions>
                        <Setter Property="Foreground"
                                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                    </MultiTrigger>

                    <!--  IsEnabled and IsSelected  -->
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="mah:DataGridHelper.SelectionUnit" Value="FullRow" />
                            <Condition Property="IsEnabled" Value="False" />
                            <Condition Property="IsSelected" Value="True" />
                        </MultiTrigger.Conditions>
                        <Setter Property="Background"
                                Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Background.Disabled}" />
                        <Setter Property="BorderBrush"
                                Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.BorderBrush.Disabled}" />
                        <Setter Property="Foreground"
                                Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.Text.Disabled}" />
                    </MultiTrigger>

                </Style.Triggers>
            </Style>

        </DataGrid.RowStyle>

        <sdk:RectSelectDataGrid.GroupStyle>
            <GroupStyle ContainerStyle="{StaticResource ExpanderGroupItem}" />
        </sdk:RectSelectDataGrid.GroupStyle>

        <sdk:RectSelectDataGrid.Columns>
            <DataGridTemplateColumn Width="20"
                                    MinWidth="20"
                                    MaxWidth="20">
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                        <Image MaxWidth="18"
                               MaxHeight="18"
                               Source="{Binding Icon}" />
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
            </DataGridTemplateColumn>
            <DataGridTextColumn Header="Имя"
                                CanUserSort="True"
                                Binding="{Binding Name, Mode=TwoWay}" />
            <DataGridTextColumn Header="Дата изменения"
                                IsReadOnly="True"
                                Binding="{Binding ChangeDateTime, StringFormat=g}" />
            <DataGridTextColumn Header="Размер"
                                IsReadOnly="True"
                                Binding="{Binding Size, StringFormat={}{0:0} КБ}" />
        </sdk:RectSelectDataGrid.Columns>

    </sdk:RectSelectDataGrid>


</UserControl>